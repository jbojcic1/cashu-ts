{"version":3,"file":"NUT20.cjs.js","sources":["../../../src/crypto/client/NUT20.ts"],"sourcesContent":["import { schnorr } from '@noble/curves/secp256k1';\nimport { SerializedBlindedMessage } from '../../model/types';\nimport { bytesToHex, hexToBytes } from '@noble/hashes/utils';\nimport { sha256 } from '@noble/hashes/sha256';\n\nfunction constructMessage(\n\tquote: string,\n\tblindedMessages: Array<SerializedBlindedMessage>\n): Uint8Array {\n\tlet message = quote;\n\tfor (const blindedMessage of blindedMessages) {\n\t\tmessage += blindedMessage.B_;\n\t}\n\tconst msgbytes = new TextEncoder().encode(message);\n\treturn sha256(msgbytes);\n}\n\nexport function signMintQuote(\n\tprivkey: string,\n\tquote: string,\n\tblindedMessages: Array<SerializedBlindedMessage>\n): string {\n\tconst message = constructMessage(quote, blindedMessages);\n\tconst privkeyBytes = hexToBytes(privkey);\n\tconst signature = schnorr.sign(message, privkeyBytes);\n\treturn bytesToHex(signature);\n}\n\nexport function verifyMintQuoteSignature(\n\tpubkey: string,\n\tquote: string,\n\tblindedMessages: Array<SerializedBlindedMessage>,\n\tsignature: string\n): boolean {\n\tconst sigbytes = hexToBytes(signature);\n\tlet pubkeyBytes = hexToBytes(pubkey);\n\tif (pubkeyBytes.length !== 33) return false;\n\tpubkeyBytes = pubkeyBytes.slice(1);\n\tconst message = constructMessage(quote, blindedMessages);\n\treturn schnorr.verify(sigbytes, message, pubkeyBytes);\n}\n"],"names":["constructMessage","quote","blindedMessages","message","blindedMessage","msgbytes","sha256","signMintQuote","privkey","privkeyBytes","hexToBytes","signature","schnorr","bytesToHex","verifyMintQuoteSignature","pubkey","sigbytes","pubkeyBytes"],"mappings":"8LAKA,SAASA,EACRC,EACAC,EACa,CACb,IAAIC,EAAUF,EACd,UAAWG,KAAkBF,EAC5BC,GAAWC,EAAe,GAE3B,MAAMC,EAAW,IAAI,cAAc,OAAOF,CAAO,EACjD,OAAOG,EAAAA,OAAOD,CAAQ,CACvB,CAEgB,SAAAE,EACfC,EACAP,EACAC,EACS,CACH,MAAAC,EAAUH,EAAiBC,EAAOC,CAAe,EACjDO,EAAeC,aAAWF,CAAO,EACjCG,EAAYC,EAAA,QAAQ,KAAKT,EAASM,CAAY,EACpD,OAAOI,EAAAA,WAAWF,CAAS,CAC5B,CAEO,SAASG,EACfC,EACAd,EACAC,EACAS,EACU,CACJ,MAAAK,EAAWN,aAAWC,CAAS,EACjC,IAAAM,EAAcP,aAAWK,CAAM,EAC/B,GAAAE,EAAY,SAAW,GAAW,MAAA,GACxBA,EAAAA,EAAY,MAAM,CAAC,EAC3B,MAAAd,EAAUH,EAAiBC,EAAOC,CAAe,EACvD,OAAOU,EAAQ,QAAA,OAAOI,EAAUb,EAASc,CAAW,CACrD"}