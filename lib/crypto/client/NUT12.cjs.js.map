{"version":3,"file":"NUT12.cjs.js","sources":["../../../src/crypto/client/NUT12.ts"],"sourcesContent":["import { DLEQ, hash_e, hashToCurve } from '../common/index.js';\nimport { ProjPointType } from '@noble/curves/abstract/weierstrass';\nimport { bytesToHex } from '@noble/curves/abstract/utils';\nimport { secp256k1 } from '@noble/curves/secp256k1';\nimport { bytesToNumber } from '../util/utils.js';\n\nfunction arraysEqual(arr1: any, arr2: any) {\n\tif (arr1.length !== arr2.length) return false;\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (arr1[i] !== arr2[i]) return false;\n\t}\n\treturn true;\n}\n\nexport const verifyDLEQProof = (\n\tdleq: DLEQ,\n\tB_: ProjPointType<bigint>,\n\tC_: ProjPointType<bigint>,\n\tA: ProjPointType<bigint>\n) => {\n\tconst sG = secp256k1.ProjectivePoint.fromPrivateKey(bytesToHex(dleq.s));\n\tconst eA = A.multiply(bytesToNumber(dleq.e));\n\tconst sB_ = B_.multiply(bytesToNumber(dleq.s));\n\tconst eC_ = C_.multiply(bytesToNumber(dleq.e));\n\tconst R_1 = sG.subtract(eA); // R1 = sG - eA\n\tconst R_2 = sB_.subtract(eC_); // R2 = sB' - eC'\n\tconst hash = hash_e([R_1, R_2, A, C_]); // e == hash(R1, R2, A, C')\n\treturn arraysEqual(hash, dleq.e);\n};\n\nexport const verifyDLEQProof_reblind = (\n\tsecret: Uint8Array, // secret\n\tdleq: DLEQ,\n\tC: ProjPointType<bigint>, // unblinded e-cash signature point\n\tA: ProjPointType<bigint> // mint public key point\n) => {\n\tif (dleq.r === undefined) throw new Error('verifyDLEQProof_reblind: Undefined blinding factor');\n\tconst Y = hashToCurve(secret);\n\tconst C_ = C.add(A.multiply(dleq.r)); // Re-blind the e-cash signature\n\tconst bG = secp256k1.ProjectivePoint.fromPrivateKey(dleq.r);\n\tconst B_ = Y.add(bG); // Re-blind the message\n\treturn verifyDLEQProof(dleq, B_, C_, A);\n};\n"],"names":["arraysEqual","arr1","arr2","i","verifyDLEQProof","dleq","B_","C_","A","sG","secp256k1","bytesToHex","eA","bytesToNumber","sB_","eC_","R_1","R_2","hash","hash_e","verifyDLEQProof_reblind","secret","C","Y","hashToCurve","bG"],"mappings":"+NAMA,SAASA,EAAYC,EAAWC,EAAW,CAC1C,GAAID,EAAK,SAAWC,EAAK,OAAe,MAAA,GACxC,QAASC,EAAI,EAAGA,EAAIF,EAAK,OAAQE,IAChC,GAAIF,EAAKE,CAAC,IAAMD,EAAKC,CAAC,EAAU,MAAA,GAE1B,MAAA,EACR,CAEO,MAAMC,EAAkB,CAC9BC,EACAC,EACAC,EACAC,IACI,CACJ,MAAMC,EAAKC,EAAAA,UAAU,gBAAgB,eAAeC,aAAWN,EAAK,CAAC,CAAC,EAChEO,EAAKJ,EAAE,SAASK,EAAAA,cAAcR,EAAK,CAAC,CAAC,EACrCS,EAAMR,EAAG,SAASO,EAAAA,cAAcR,EAAK,CAAC,CAAC,EACvCU,EAAMR,EAAG,SAASM,EAAAA,cAAcR,EAAK,CAAC,CAAC,EACvCW,EAAMP,EAAG,SAASG,CAAE,EACpBK,EAAMH,EAAI,SAASC,CAAG,EACtBG,EAAOC,EAAAA,OAAO,CAACH,EAAKC,EAAKT,EAAGD,CAAE,CAAC,EAC9B,OAAAP,EAAYkB,EAAMb,EAAK,CAAC,CAChC,EAEae,EAA0B,CACtCC,EACAhB,EACAiB,EACAd,IACI,CACJ,GAAIH,EAAK,IAAM,OAAiB,MAAA,IAAI,MAAM,oDAAoD,EACxF,MAAAkB,EAAIC,cAAYH,CAAM,EACtBd,EAAKe,EAAE,IAAId,EAAE,SAASH,EAAK,CAAC,CAAC,EAC7BoB,EAAKf,EAAAA,UAAU,gBAAgB,eAAeL,EAAK,CAAC,EACpDC,EAAKiB,EAAE,IAAIE,CAAE,EACnB,OAAOrB,EAAgBC,EAAMC,EAAIC,EAAIC,CAAC,CACvC"}